#!/usr/bin/env rc

func test (num uint; desc string; status bool) {
  if status {
    println (`ok `, num, ` - `, desc);
  } else {
    println (`not ok `, num, ` - `, desc);
  }
}

type Test component { };

init (this *Test) Main () {
  println (`1..23`);

  {
    const x int8 = 3.0;
    test (1, `3.0 to int8`, x == 3);
  }
  {
    const x int16 = 3.0;
    test (2, `3.0 to int16`, x == 3);
  }
  {
    const x int32 = 3.0;
    test (3, `3.0 to int32`, x == 3);
  }
  {
    const x int64 = 3.0;
    test (4, `3.0 to int64`, x == 3);
  }
  {
    const x int128 = 3.0;
    test (5, `3.0 to int128`, x == 3);
  }
  {
    const x uint8 = 3.0;
    test (6, `3.0 to uint8`, x == 3);
  }
  {
    const x uint16 = 3.0;
    test (7, `3.0 to uint16`, x == 3);
  }
  {
    const x uint32 = 3.0;
    test (8, `3.0 to uint32`, x == 3);
  }
  {
    const x uint64 = 3.0;
    test (9, `3.0 to uint64`, x == 3);
  }
  {
    const x uint128 = 3.0;
    test (10, `3.0 to uint128`, x == 3);
  }
  {
    const x float32 = 3.0;
    test (11, `3.0 to float32`, x == 3);
  }
  {
    const x float64 = 3.0;
    test (12, `3.0 to float64`, x == 3);
  }
  {
    const x complex64 = 3.0;
    test (13, `3.0 to complex64`, x == 3);
  }
  {
    const x complex128 = 3.0;
    test (14, `3.0 to complex128`, x == 3);
  }
  {
    const x int64 = 2147483648.0;
    test (15, `2147483648.0 to int64`, x == (1<<31));
  }
  {
    const x int128 = 2147483648.0;
    test (16, `2147483648.0 to int128`, x == (1<<31));
  }
  {
    const x uint32 = 2147483648.0;
    test (17, `2147483648.0 to uint32`, x == (1<<31));
  }
  {
    const x uint64 = 2147483648.0;
    test (18, `2147483648.0 to uint64`, x == (1<<31));
  }
  {
    const x uint128 = 2147483648.0;
    test (19, `2147483648.0 to uint128`, x == (1<<31));
  }
  {
    const x float32 = 2147483648.0;
    test (20, `2147483648.0 to float32`, x == (1<<31));
  }
  {
    const x float64 = 2147483648.0;
    test (21, `2147483648.0 to float64`, x == (1<<31));
  }
  {
    const x complex64 = 2147483648.0;
    test (22, `2147483648.0 to complex64`, x == (1<<31));
  }
  {
    const x complex128 = 2147483648.0;
    test (23, `2147483648.0 to complex128`, x == (1<<31));
  }
}

instance t Test Main ();
