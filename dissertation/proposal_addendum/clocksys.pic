.PS
G: [
Clock: [
A: [
down
ellipse "request";
Request: .e of last ellipse;
ellipse "clock";
Clock: .e of last ellipse;
]
box width (A.width + .30) height (A.height + .5) with .s at A.s + (0,-.15);
"Clock clock" at last box.top + (0,-.2);
]
move
ClockPoll: [
A: [
down
ellipse "request";
Request: .w of last ellipse;
ellipse "clock\_in";
ClockIn: .w of last ellipse;
ellipse "clock\_out";
ClockOut: .e of last ellipse;
]
box width (A.width + .30) height (A.height + .5) with .s at A.s + (0,-.15);
"ClockPoll poll" at last box.top + (0,-.2);
]
move
ClockCounter: [
A: [
down
ellipse "clock";
Clock: .w of last ellipse;
ellipse "count";
]
box width (A.width + .30) height (A.height + .5) with .s at A.s + (0,-.15);
"ClockCounter" "counter" at last box.top + (0,-.2);
]
arrow from ClockPoll.A.Request to Clock.A.Request;
arrow from Clock.A.Clock to ClockPoll.A.ClockIn;
arrow from ClockPoll.A.ClockOut to ClockCounter.A.Clock;
]

box width (G.width + .30) height (G.height + .5) with .s at G.s + (0,-.15);
"ClockSys" at last box.top + (0,-.2);

.PE